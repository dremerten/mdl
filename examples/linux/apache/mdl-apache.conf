##############################################################################
##############################################################################
#
# Sample reverse proxy code for Apache and mdl
#
##############################################################################
##############################################################################
#
# Steps:
#
# 1) Set your mdl configuration to listen on localhost, port 6001
# 2) Set your server_name to a DNS fully qualified domain name or IP address
# 3) Make your server listen on a non 6001 port, like 6000 in the example
#    (or port 80)
# 4) Enable mod proxy using the followin command (Ubuntu)
#
#    $ sudo a2enmod proxy_http
#
# 5) (Ubuntu) Place this file in the /etc/apache2/sites-available directory
#    and soft-link it to /etc/apache2/sites-enabled
# 6) Start Apache and check the logs
#
##############################################################################
##############################################################################

# Make Apache listen on port 6000
listen 6000

# Set up API queries on port 6000 to be proxied to the Gunicorn based
# mdl API on port 6001

<VirtualHost *:6000>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

    #########################################################################
    #########################################################################
    #
    # NOTE!
    # To enable mod proxy for mdl issue the following command (Ubuntu)
    #
    # a2enmod proxy_http
    #
    #########################################################################
    #########################################################################
    # Pass the Host: line from the incoming request to the proxied host,
    # instead of the hostname specified in the ProxyPass line. This option
    # should normally be turned Off. It is mostly useful in special
    # configurations like proxied mass name-based virtual hosting, where
    # the original Host header needs to be evaluated by the backend server.
	ProxyPreserveHost On

    # Only do proxying for the mdl API URI
	ProxyPass /mdl/api/v1.0 http://127.0.0.1:6001/mdl/api/v1.0
  	ProxyPassReverse /mdl/api/v1.0 http://127.0.0.1:6001/mdl/api/v1.0

    # Lock down access to the mdl API URI
    # Enable access from all networks / hosts
	<Location "/mdl/api/v1.0">
        #### Syntax for Apache 2.4
		Require all granted

        #### Syntax for Apache 2.2
        # Order Allow,Deny
        # Allow from All
	</Location>

    #########################################################################
    #########################################################################
    #
    # Security features
    #
    #########################################################################
    #########################################################################

    # Turn off features that could identify the server type and version
    ServerSignature Off

    # Security measures using mod rewrite
    <IfModule mod_rewrite.c>
        # Enable mod rewrite
        RewriteEngine On

        # Only allow HTTP POSTs and GETs
        RewriteCond %{REQUEST_METHOD} ^(delete|head|trace|track) [NC, OR]

        # Ban prohibited characters
        RewriteCond %{THE_REQUEST} ^.*(\\r|\\n|%0A|%0D).* [NC, OR]

        # Block referrer SPAM
        RewriteCond %{HTTP_REFERER} ^(.*)(<|>|'|%0A|%0D|%27|%3C|%3E|%00).* [NC,OR]

        # Blacklist known bad URIs
        RewriteCond %{REQUEST_URI} ^.*(,|;|:|<|>|">|"<|/|\\\.\.\\).* [NC,OR]
        RewriteCond %{REQUEST_URI} ^.*(\=|\@|\[|\]|\^|\`|\{|\}|\~).* [NC,OR]
        RewriteCond %{REQUEST_URI} ^.*(\'|%0A|%0D|%27|%3C|%3E|%00).* [NC, OR]

        # Blacklist bad query strings used for XSS attacks
        RewriteCond %{QUERY_STRING} ^.*(\.|\*|;|<|>|'|"|\)|%0A|%0D|%22|%27|%3C|%3E|%00).*                 [NC,OR]
        RewriteCond %{QUERY_STRING} ^.*(md5|benchmark|union|select|insert|cast|set|declare|drop|update).* [NC]

        # Fail the conditions if matched
        RewriteRule ^(.*)$ - [F,L]
    </IfModule>

</VirtualHost>
